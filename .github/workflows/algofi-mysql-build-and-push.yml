name: MySQL Build and Push

on:
  push:
    branches:
      - CICD
      # develop 브랜치에 push될 때 워크플로우가 실행됩니다.
    paths:
      - "algofi-mysql/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # 가장 최신의 Ubuntu 러너를 사용합니다.

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        # 현재 리포지토리를 체크아웃합니다.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        # Docker Buildx를 설정합니다.

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # GitHub Secret에서 Docker Hub 사용자 이름을 가져옵니다.
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          # GitHub Secret에서 Docker Hub 액세스 토큰을 가져옵니다.

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ./algofi-mysql
          # Dockerfile이 있는 위치입니다.
          file: ./algofi-mysql/Dockerfile
          # Dockerfile의 경로입니다.
          push: true
          # 이미지를 레지스트리에 푸시합니다.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/algofi-mysql:${{ github.sha }}
          platforms: linux/amd64,linux/arm64

      - name: Send Discord Notification
        if: success()
        run: |
          commit_message=$(echo "${{ github.event.head_commit.message }}" | jq -sRr @uri)
          image_tag="${{ secrets.DOCKERHUB_USERNAME }}/algofi-core:${{ github.sha }}"

          payload=$(jq -n \
            --arg content "Docker image has been successfully built and pushed to Docker Hub.\nimage: ${image_tag}\nmessage: ${commit_message}" \
            --arg username "GitHub Actions" \
            '{content: $content, username: $username}')

          curl -H "Content-Type: application/json" \
               -d "$payload" \
               https://discord.com/api/webhooks/1248567167566217276/W2qD9qYOADW1gtG62HK43fE3xqtZxLT8ClkpuiS5HbmNsdxmWt2kGWYngrxs53TBBBUO/github
        shell: /usr/bin/bash -e {0}
